{"ast":null,"code":"export function zipSort(mainList, secondaryList, sortBy) {\n  let extra = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  let zipped = mainList.map((e, i) => [e, secondaryList[i]]);\n\n  // Sort the zipped array\n  zipped.sort((a, b) => {\n    if (sortBy === \"asc\") return a[0].name.localeCompare(b[0].name);else return b[0].name.localeCompare(a[0].name);\n  });\n\n  // Unzip the sorted array back into two separate arrays\n  const sortedMainList = [];\n  const sortedSecondaryList = [];\n  for (let i = 0; i < zipped.length; i++) {\n    sortedMainList[i] = zipped[i][0];\n    sortedSecondaryList[i] = zipped[i][1];\n  }\n  return [sortedMainList, sortedSecondaryList];\n}\nexport function getStyle(width) {\n  const flexStyleLarge = {\n    display: \"flex\",\n    width: \"400px\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    margin: \"6px 0\"\n  };\n  const flexStyleSmall = {\n    display: \"flex\",\n    width: \"250px\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    margin: \"3px 0\"\n  };\n  if (width < 450) return flexStyleSmall;\n  return flexStyleLarge;\n}\nexport function binarySearch(name, sortBy, people) {\n  var _index;\n  let low = 0;\n  let high = people.length - 1;\n  const isAsc = sortBy === \"asc\";\n  let index = null;\n  while (low <= high) {\n    const mid = Math.floor((low + high) / 2);\n    if (isAsc) {\n      if (name.localeCompare(people[mid].name) <= 0) {\n        index = mid;\n        high = mid - 1;\n      } else {\n        low = mid + 1;\n      }\n    } else {\n      if (name.localeCompare(people[mid].name) === 1) {\n        index = mid;\n        high = mid - 1;\n      } else {\n        low = mid + 1;\n      }\n    }\n  }\n  return (_index = index) !== null && _index !== void 0 ? _index : people.length;\n}","map":{"version":3,"names":["zipSort","mainList","secondaryList","sortBy","extra","arguments","length","undefined","zipped","map","e","i","sort","a","b","name","localeCompare","sortedMainList","sortedSecondaryList","getStyle","width","flexStyleLarge","display","justifyContent","alignItems","margin","flexStyleSmall","binarySearch","people","_index","low","high","isAsc","index","mid","Math","floor"],"sources":["C:/Users/Md. Nahiduzzaman/Desktop/Task 2/src/misc.js"],"sourcesContent":["export function zipSort(mainList, secondaryList, sortBy, extra = {}) {\n  let zipped = mainList.map((e, i) => [e, secondaryList[i]]);\n\n  // Sort the zipped array\n  zipped.sort((a, b) => {\n    if (sortBy === \"asc\") return a[0].name.localeCompare(b[0].name);\n    else return b[0].name.localeCompare(a[0].name);\n  });\n\n  // Unzip the sorted array back into two separate arrays\n  const sortedMainList = [];\n  const sortedSecondaryList = [];\n  for (let i = 0; i < zipped.length; i++) {\n    sortedMainList[i] = zipped[i][0];\n    sortedSecondaryList[i] = zipped[i][1];\n  }\n\n  return [sortedMainList, sortedSecondaryList];\n}\n\nexport function getStyle(width) {\n  const flexStyleLarge = {\n    display: \"flex\",\n    width: \"400px\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    margin: \"6px 0\"\n  };\n\n  const flexStyleSmall = {\n    display: \"flex\",\n    width: \"250px\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    margin: \"3px 0\"\n  };\n\n  if (width < 450) return flexStyleSmall;\n  return flexStyleLarge;\n}\n\nexport function binarySearch(name, sortBy, people) {\n  let low = 0;\n  let high = people.length - 1;\n  const isAsc = sortBy === \"asc\";\n  let index = null;\n\n  while (low <= high) {\n    const mid = Math.floor((low + high) / 2);\n    if (isAsc) {\n      if (name.localeCompare(people[mid].name) <= 0) {\n        index = mid;\n        high = mid - 1;\n      } else {\n        low = mid + 1;\n      }\n    } else {\n      if (name.localeCompare(people[mid].name) === 1) {\n        index = mid;\n        high = mid - 1;\n      } else {\n        low = mid + 1;\n      }\n    }\n  }\n\n  return index ?? people.length;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}